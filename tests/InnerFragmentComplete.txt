"   Given the following CamelCase identifiers in a source code fragment:
"	set MyScript31337PathAndNameWithoutExtension11=%~dpn0
"	set MyScript31337PathANDNameWITHOUTExtension11=%~dpn0
"   and the corresponding identifiers in underscore_notation:
"	set my_script_31337_path_and_name_without_extension_11=%~dpn0
"	set my_SCRIPT_31337_PATH_AND_NAME_WITHOUT_EXTENSION_11=%~dpn0
"   but not path_and_name, PathAndName, PATH_AND_NAME.

" prefixedanycrazyname or prefixedanothercodename
" prefixedAnyCrazyName or prefixedAnotherCodeName, but not AnotherCodeNegative neither prefixedBadCodeName.
" prefixedThatCrazyName or prefixedCamelCodeName, but not CamelCodeNegative neither prefixedBadCodeName.
" prefixed_any_crazy_name or prefixed_another_code_name, but not another_code_negative neither prefixed_bad_code_name.
" prefixed_this_crazy_name or prefixed_underscore_code_name, but not underscore_code_negative neither prefixed_bad_code_name.
" prefixed_this_Crazy_Name or prefixed_underscore_Code_Name, but not underscore_CODE_NEGATIVE neither prefixed_bad_CODE_NAME.
" prefixed_this_CRAZY_NAME or prefixed_underscore_CODE_NAME, but not underscore_CODE_NEGATIVE neither prefixed_BAD_CODE_NAME.
" prefixed_UpperCrazyUpper or prefixed_Upper_crazy_Upper or prefixed_UPPER_CRAZY_UPPER

call s:FindMatchesInCurrentWindow( a:matches, a:pattern, {}, a:options )
call g:FindMatchesInOtherWindows( a:matches, a:pattern, a:options )
call s:fileCreate()
call g:fileDelete()
call global_fileData()

let g:IndentConsistencyCop_highlighting = 'sglmf:3'
let g:IndentConsistencyCop_non_indent_pattern = 'compartmentalize,decompress'
let g:IndentConsistencyCop_nonIndentPattern = 'decompose'
